(require 'org)

(defun sk-mew-org-windows (fld msg)
 (delete-other-windows)
 (split-window-vertically -9)
 (mew-summary-switch-to-folder fld)
 (mew-summary-search-msg msg)
 (mew-summary-display t)
)

(add-to-list 'org-link-abbrev-alist '("mew" . sk-mew-org-link))

(defun sk-mew-org-link (arg)
 (let ((args (split-string arg "#")))
 (sk-mew-org-windows (car args) (car (cdr args)))
 ""))

(defvar sk-mew-org-file (concat (getenv "HOME") "/gtd.org"))

(define-key mew-summary-mode-map "@" 'sk-mew-org-add-task)

(defun sk-mew-org-add-task ()
 "test"
 (interactive)
 (mew-summary-msg
 (let ((fld (mew-summary-folder-name))
(msg (mew-summary-message-number)))
 (mew-summary-set-message-buffer fld msg)
 (let ((sbj (mew-header-get-value "Subject:"))
 (buf (get-file-buffer sk-mew-org-file)))
 (unless buf
(setq buf (find-file sk-mew-org-file)))
 (switch-to-buffer buf)
 (sk-mew-org-windows fld msg)
 (set-buffer buf)
 (goto-char (point-min))
 (insert (concat "* [[mew:" fld "#" msg "][" sbj "]]\n"))
 (other-window -1)
 (goto-char (+ (point-min) 2))))))
